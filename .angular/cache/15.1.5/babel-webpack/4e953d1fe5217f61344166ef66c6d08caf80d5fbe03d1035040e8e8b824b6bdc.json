{"ast":null,"code":"import axios from \"axios\";\nimport * as i0 from \"@angular/core\";\nexport class SwapiService {\n  constructor() {}\n  getPersonajes(id) {\n    let arrUrl = axios.get(\"https://swapi.dev/api/films\").then(data => {\n      return data.data.results.filter(ele => {\n        if (id == ele.episode_id) {\n          let objeto = {\n            personajes: ele.characters\n          };\n          return objeto;\n        } else return null;\n      });\n    }).then(data => {\n      return data[0].characters;\n    });\n    let arr = arrUrl.map(ele => {\n      axios.get(ele).then(ele => {\n        return {\n          nombre: ele.data.name,\n          ojos: ele.data.eye_color,\n          genero: ele.data.genered\n        };\n      });\n    });\n    return Promise.all(arr).then(personajes => {\n      return personajes;\n    });\n  }\n}\nSwapiService.ɵfac = function SwapiService_Factory(t) {\n  return new (t || SwapiService)();\n};\nSwapiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SwapiService,\n  factory: SwapiService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,OAAOA,KAAK,MAAM,OAAO;;AAKzB,OAAM,MAAOC,YAAY;EACvBC,eAAgB;EACdC,aAAa,CAAEC,EAAM;IACpB,IAAIC,MAAM,GAAML,KAAK,CAACM,GAAG,CAAC,6BAA6B,CAAC,CAC7CC,IAAI,CAACC,IAAI,IAAE;MACV,OAAOA,IAAI,CAACA,IAAI,CAACC,OAAO,CAACC,MAAM,CAAEC,GAAO,IAAG;QACrC,IAAGP,EAAE,IAAEO,GAAG,CAACC,UAAU,EAAC;UACrB,IAAIC,MAAM,GAAC;YACTC,UAAU,EAACH,GAAG,CAACI;WAChB;UACD,OAAOF,MAAM;SACZ,MAAM,OAAO,IAAI;MAC5B,CAAC,CAAC;IAEH,CAAC,CAAC,CACDN,IAAI,CAACC,IAAI,IAAE;MAAC,OAAOA,IAAI,CAAC,CAAC,CAAC,CAACO,UAAU;IAAA,CAAC,CAAC;IAChD,IAAIC,GAAG,GAACX,MAAM,CAACY,GAAG,CAAEN,GAAO,IAAG;MACxBX,KAAK,CAACM,GAAG,CAACK,GAAG,CAAC,CAACJ,IAAI,CAACI,GAAG,IAAE;QACxB,OAAM;UACJO,MAAM,EAACP,GAAG,CAACH,IAAI,CAACW,IAAI;UACpBC,IAAI,EAACT,GAAG,CAACH,IAAI,CAACa,SAAS;UACvBC,MAAM,EAACX,GAAG,CAACH,IAAI,CAACe;SACjB;MACF,CAAC,CAAC;IACR,CAAC,CAAC;IACJ,OAAOC,OAAO,CAACC,GAAG,CAACT,GAAG,CAAC,CAACT,IAAI,CAACO,UAAU,IAAE;MAAC,OAAOA,UAAU;IAAA,CAAC,CAAC;EAChE;;AA1Bab,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAyB,SAAZzB,YAAY;EAAA0B,YAFX;AAAM","names":["axios","SwapiService","constructor","getPersonajes","id","arrUrl","get","then","data","results","filter","ele","episode_id","objeto","personajes","characters","arr","map","nombre","name","ojos","eye_color","genero","genered","Promise","all","factory","providedIn"],"sourceRoot":"","sources":["C:\\gualda training\\angular\\proyect\\src\\app\\servicios\\swapi.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport axios from \"axios\"\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SwapiService {\n  constructor() { }\n    getPersonajes (id:any){\n     let arrUrl:any= axios.get(\"https://swapi.dev/api/films\")\n               .then(data=>{\n                 return data.data.results.filter((ele:any)=>{\n                       if(id==ele.episode_id){ \n                        let objeto={\n                          personajes:ele.characters\n                        }\n                        return objeto\n                        } else return null\n              })\n               \n             }) \n             .then(data=>{return data[0].characters})\n     let arr=arrUrl.map((ele:any)=>{\n           axios.get(ele).then(ele=>{\n            return{\n              nombre:ele.data.name,\n              ojos:ele.data.eye_color,\n              genero:ele.data.genered\n            }\n           })\n     })\n   return Promise.all(arr).then(personajes=>{return personajes})\n}\n\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}