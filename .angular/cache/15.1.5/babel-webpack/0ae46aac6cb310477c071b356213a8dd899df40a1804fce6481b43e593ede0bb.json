{"ast":null,"code":"import axios from \"axios\";\nimport * as i0 from \"@angular/core\";\nexport class SwapiService {\n  constructor() {}\n  getPersonajes(id) {\n    let arr = axios.get(\"https://swapi.dev/api/films\").then(data => {\n      return data.data.results.filter(ele => {\n        if (id == ele.episode_id) {\n          let objeto = {\n            personajes: ele.characters\n          };\n          return objeto;\n        } else return null;\n      });\n    }).then(data => {\n      return data[0].characters;\n    }).then(res => {\n      res.map(ele => {\n        axios.get(ele).then(ele => {\n          return {\n            nombre: ele.data.name,\n            ojos: ele.data.eye_color,\n            genero: ele.data.gender\n          };\n        });\n      });\n      return Promise.all(res).then(personajes => {\n        return personajes;\n      });\n    });\n  }\n}\nSwapiService.ɵfac = function SwapiService_Factory(t) {\n  return new (t || SwapiService)();\n};\nSwapiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SwapiService,\n  factory: SwapiService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,OAAOA,KAAK,MAAM,OAAO;;AAKzB,OAAM,MAAOC,YAAY;EAEvBC,eAAgB;EACdC,aAAa,CAAEC,EAAM;IACpB,IAAIC,GAAG,GAAEL,KAAK,CAACM,GAAG,CAAC,6BAA6B,CAAC,CACxCC,IAAI,CAACC,IAAI,IAAE;MACV,OAAOA,IAAI,CAACA,IAAI,CAACC,OAAO,CAACC,MAAM,CAAEC,GAAO,IAAG;QACnC,IAAGP,EAAE,IAAEO,GAAG,CAACC,UAAU,EAAC;UACrB,IAAIC,MAAM,GAAC;YACTC,UAAU,EAACH,GAAG,CAACI;WAChB;UACD,OAAOF,MAAM;SACZ,MAAM,OAAO,IAAI;MAC5B,CAAC,CAAC;IAEH,CAAC,CAAC,CAAEN,IAAI,CAACC,IAAI,IAAE;MAAC,OAAOA,IAAI,CAAC,CAAC,CAAC,CAACO,UAAU;IAAA,CAAC,CAAC,CACvCR,IAAI,CAACS,GAAG,IAAE;MACNA,GAAG,CAACC,GAAG,CAAEN,GAAO,IAAG;QACbX,KAAK,CAACM,GAAG,CAACK,GAAG,CAAC,CAACJ,IAAI,CAAEI,GAAG,IAAG;UACzB,OAAM;YACJO,MAAM,EAACP,GAAG,CAACH,IAAI,CAACW,IAAI;YACpBC,IAAI,EAACT,GAAG,CAACH,IAAI,CAACa,SAAS;YACvBC,MAAM,EAACX,GAAG,CAACH,IAAI,CAACe;WACjB;QACH,CAAC,CAAC;MACR,CAAC,CAAC;MACH,OAAQC,OAAO,CAACC,GAAG,CAACT,GAAG,CAAC,CAACT,IAAI,CAAEO,UAAU,IAAG;QAC1C,OAAOA,UAAU;MAClB,CAAC,CAAC;IACP,CAAC,CAAC;EAElB;;AA/Bab,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAyB,SAAZzB,YAAY;EAAA0B,YAFX;AAAM","names":["axios","SwapiService","constructor","getPersonajes","id","arr","get","then","data","results","filter","ele","episode_id","objeto","personajes","characters","res","map","nombre","name","ojos","eye_color","genero","gender","Promise","all","factory","providedIn"],"sourceRoot":"","sources":["C:\\gualda training\\angular\\proyect\\src\\app\\servicios\\swapi.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport axios from \"axios\"\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SwapiService {\n\n  constructor() { }\n    getPersonajes (id:any){\n     let arr= axios.get(\"https://swapi.dev/api/films\")\n             .then(data=>{\n               return data.data.results.filter((ele:any)=>{\n                       if(id==ele.episode_id){ \n                        let objeto={\n                          personajes:ele.characters\n                        }\n                        return objeto\n                        } else return null\n              })\n               \n             }) .then(data=>{return data[0].characters})\n                .then(res=>{\n                     res.map((ele:any)=>{\n                           axios.get(ele).then((ele)=>{\n                             return{\n                               nombre:ele.data.name,\n                               ojos:ele.data.eye_color,\n                               genero:ele.data.gender\n                             }\n                           })\n                     })\n                    return  Promise.all(res).then((personajes)=>{\n                      return personajes\n                     })\n                })\n     \n} }\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}